#! /usr/bin/env python
# -*- coding: utf-8 -*-

import glob
import sys
import time

sys.path.append('gen-py')

from thbdb import Basic
from thbdb import ttypes

from thrift import Thrift
from thrift.transport import TSocket
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol

from locust import Locust, TaskSet, task, events

class MyTaskSet(TaskSet):

    def on_start(self):
        self.transport = TSocket.TSocket('localhost', 9090)
        self.transport = TTransport.TBufferedTransport(self.transport)
        self.protocol = TBinaryProtocol.TBinaryProtocol(self.transport)
        self.clienta = Basic.Client(self.protocol)
        self.transport.open()
        print("Start")

    @task
    def hello(self):
        start_time = time.time()
        try:
            
            print("hello on :" + self )
            self.clienta.hello( "YeaH!" );
            total_time = int((time.time() - start_time) * 1000)
            events.request_success.fire(request_type='redis',
                                            name='get',
                                            response_time=total_time,
                                            response_length=0)
        except Exception as e:
            total_time = int((time.time() - start_time) * 1000)
            events.request_failure.fire(request_type='redis',
                                        name='set',
                                        response_time=total_time,
                                        exception=e)
            print( e )

            

    #def index(self):
    #    import pdb; pdb.set_trace()
    #    self.client.get("/")



class MyLocust(Locust):
    task_set = MyTaskSet
    min_wait = 5000
    max_wait = 15000
